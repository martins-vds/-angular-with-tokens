name: $(date:yyyyMMdd)$(rev:.r)

pool:
    vmImage: ubuntu-latest

jobs:
- job: Job_1
  displayName: Agent job 1 
  steps:
  - checkout: self
  - task: Npm@1
    displayName: npm install
    inputs:
      workingDir: ui/helloworld
      verbose: false
  - task: Npm@1
    displayName: npm build
    inputs:
      command: custom
      workingDir: ui/helloworld
      verbose: false
      customCommand: run build -- --prod --configuration=tokenized --output-path=tokenized
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)\tokenizedapp'
    inputs:
      SourceFolder: $(system.defaultworkingdirectory)
      Contents: '**\tokenized\**'
      TargetFolder: $(build.artifactstagingdirectory)\tokenizedapp
      CleanTargetFolder: true
      OverWrite: true
      flattenFolders: true  
  - publish: $(build.artifactstagingdirectory)\tokenizedapp
    displayName: 'Publish artifacts: tokenizedapp'
    artifact: tokenizedapp

- job: deploy_dev
  displayName: Agent job 1
  pool:
    vmImage: ubuntu-latest
  steps:
  - download: current
    artifact: tokenizedapp  
  - task: qetza.replacetokens.replacetokens-task.replacetokens@6
    inputs:
      root: '$(Pipeline.Workspace)/tokenizedapp'
      sources: '**/main*.js'
      addBOM: true
      escape: 'off'
  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Visual Studio Enterprise(21881e13-25a3-400f-90c8-e9ae18cf70aa)'
      appType: 'webAppLinux'
      WebAppName: 'app-fr7cc4pwof6ti'
      packageForLinux: '$(Pipeline.Workspace)/tokenizedapp'
      RuntimeStack: 'NODE|10.14'